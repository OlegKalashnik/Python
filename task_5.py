import random
# 5. Реализовать функцию get_jokes(), возвращающую n шуток, сформированных из трех случайных слов, взятых из трёх списков:
# nouns = ["автомобиль", "лес", "огонь", "город", "дом"]
# adverbs = ["сегодня", "вчера", "завтра", "позавчера", "ночью"]
# adjectives = ["веселый", "яркий", "зеленый", "утопичный", "мягкий"]
# Например:
#
# >>> get_jokes(2)
# ["лес завтра зеленый", "город вчера веселый"]
# Документировать код функции.
# Усложнение: * Сможете ли вы добавить еще один аргумент — флаг, разрешающий или запрещающий повторы слов в шутках (когда каждое слово можно использовать только в одной шутке)? Сможете ли вы сделать аргументы именованными?

def get_jokes(repeats=True, quantity=1):
    """Функция возвращает шутки, quantity=количество(max=5 for repeats=False), repeats=повторы слов в шутках"""
    nouns = ["автомобиль", "лес", "огонь", "город", "дом"]
    adverbs = ["сегодня", "вчера", "завтра", "позавчера", "ночью"]
    adjectives = ["веселый", "яркий", "зеленый", "утопичный", "мягкий"]
    # выбираем инструмент для смешивания слов
    if repeats:
        get_words = random.choices
    else:
        get_words = random.sample
        # кол-во уникальных шуток не должно превышать кол-во слов
        max_len = min(len(nouns), len(adverbs), len(adjectives))
        if quantity > max_len:
            quantity = max_len
    # создаём zip со случайными словами из наборов и поочередно добавляем в список
    joke = list(map(lambda x: ' '.join(x), zip(
        get_words(nouns, k=quantity), get_words(adverbs, k=quantity), get_words(adjectives, k=quantity)
    )))
    return joke


print(get_jokes(quantity=18, repeats=False))
